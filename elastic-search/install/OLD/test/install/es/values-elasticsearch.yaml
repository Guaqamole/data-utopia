replicas: 1

service:
  enabled: true
  labels: {}
  labelsHeadless: {}
  type: NodePort
  # Consider that all endpoints are considered "ready" even if the Pods themselves are not
  # https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/#ServiceSpec
  publishNotReadyAddresses: false
  nodePort: ""
  annotations: {}
  httpPortName: http
  transportPortName: transport
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  externalTrafficPolicy: ""

#esConfig:
  #elasticsearch.yml: |-
    #xpack.security.enabled: true
    #xpack.security.transport.ssl.enabled: true
    #xpack.security.transport.ssl.verification_mode: certificate 
    #xpack.security.transport.ssl.client_authentication: required
    #xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs/es-ca.p12
    #xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs/es-ca.p12

#extraEnvs:
#  - name: ELASTIC_USERNAME
#    valueFrom:
#      secretKeyRef:
#        name: elastic-credentials
#        key: username
#  - name: ELASTIC_PASSWORD
#    valueFrom:
#      secretKeyRef:
#        name: elastic-credentials
#        key: password
#
#secretMounts:
#  - name: elastic-ca
#    secretName: elastic-ca
#    path: /usr/share/elasticsearch/config/certs

resources:
  requests:
    cpu: "512m"
    memory: "1Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"

volumeClaimTemplate:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 5Gi

ingress:
 enabled: true
 className: "nginx"
 hosts:
 - host: elasticsearch
   paths:
   - path: /
